/*
 * OV7670.cpp
 *
 *  Created on: 2013/11/05
 *      Author: sin
 */

#include "OV7670.h"

boolean OV7670::begin(void) {
	word regval;
	byte reg, val;
	byte result;
	int trial;
	// setup parrallel interface.
	  pinMode(_WEN, OUTPUT); // WEN
	  digitalWrite(_WEN, LOW);
	  pinMode(_VSYNC, INPUT);  // VSYNC
	  pinMode(_HREF, INPUT);  // HREF
	  pinMode(_RRST, OUTPUT);
	  digitalWrite(_RRST, HIGH);

	 // RCLK 1MHz  by TC2 fast-PWM with TOP=OCRA
	  pinMode(_RCLK, OUTPUT);
	  digitalWrite(_RCLK, HIGH);

	  pinMode(_OE, OUTPUT);
	  digitalWrite(_OE, HIGH);
	// OV7670_REGCONF_QVGA
	for(int i = 0; (regval = pgm_read_word(OV7670_REGCONF_QQVGA3+i)) != 0xffff ; i++ ) {
		for(trial = 0; trial < 3; trial ++) {
			result = writeRegister(regval>>8 & 0xff, regval & 0xff);
			if ( result == 0 )
				break;
			delay(2);
		}
		if (! (trial < 3) )
			return false;
	}
	  /*
	for(int i = 0; (regval = pgm_read_word(OV7670_REGCONF_QQVGA+i)) != 0xFFFF ; i++ ) {
		for(trial = 0; trial < 3; trial ++) {
			result = writeRegister(regval>>8&0xff, regval & 0xff);
			if ( result == 0 )
				break;
			delay(2);
		}
		if (! (trial < 3) )
			return false;
	}
	*/
	return true;
}

const uint16_t OV7670::OV7670_REGCONF_QVGA[] FLASH_DEF = {

 /*  {0x12,  0x46}, */
	0x1280,

	0x3a04,
	0x4010,
	0x1214,
	0x32b6,
	0x1716,
	0x1804,
	0x1903,
	0x1a7b, //0x7a,
	0x030a, //0x0a,
	0x0c00,
	0x3e00, //
	0x7000,
	0x7100,
	0x7211,
	0x7300, //
	0xa202,
	0x1180,
	0x7a20,
	0x7b1c,
	0x7c28,
	0x7d3c,
	0x7e55,
	0x7f68,
	0x8076,
	0x8180,
	0x8288,
	0x838f,
	0x8496,
	0x85a3,
	0x86af,
	0x87c4,
	0x88d7,
	0x89e8,
	0x13e0,
	0x0000, //AGC
	0x1000,
	0x0d00,
	0x1420, //0x38,  limit the max gain
	0xa505,
	0xab07,
	0x2475,
	0x2563,
	0x26A5,
	0x9f78,
	0xa068,
	0xa103, //0x0b,
	0xa6df, //0xd8,
	0xa7df, //0xd8,
	0xa8f0,
	0xa990,
	0xaa94,
	0x13e5,
	0x0e61,
	0x0f4b,
	0x1602,
	0x1e37, //0x07,
	0x2102,
	0x2291,
	0x2907,
	0x330b,
	0x350b,
	0x371d,
	0x3871,
	0x392a, //
	0x3c78,
	0x4d40,
	0x4e20,
	0x690c, ///////////////////////
	0x6b40, //PLL
	0x7419,
	0x8d4f,
	0x8e00,
	0x8f00,
	0x9000,
	0x9100,
	0x9200, //0x19, //0x66
	0x9600,
	0x9a80,
	0xb084,
	0xb10c,
	0xb20e,
	0xb382,
	0xb80a,
	0x4314,
	0x44f0,
	0x4534,
	0x4658,
	0x4728,
	0x483a,
	0x5988,
	0x5a88,
	0x5b44,
	0x5c67,
	0x5d49,
	0x5e0e,
	0x6404,
	0x6520,
	0x6605,
	0x9404,
	0x9508,
	0x6c0a,
	0x6d55,
	0x6e11,
	0x6f9f, //0x9e for advance AWB
	0x6a40,
	0x0140,
	0x0240,
	0x13e7,
	0x1500,
	0x4f80,
	0x5080,
	0x5100,
	0x5222,
	0x535e,
	0x5480,
	0x589e,
	0x4108,
	0x3f00,
	0x7505,
	0x76e1,
	0x4c00,
	0x7701,
	0x3dc2, 	//0xc0,
	0x4b09,
	0xc9cc,
	0x4138,
	0x5640, //0x40,   change according to Jim's request
	0x3411,
	0x3b02, //0x00, //0x02,
	0xa489, //0x88,
	0x9600,
	0x9730,
	0x9820,
	0x9930,
	0x9a84,
	0x9b29,
	0x9c03,
	0x9d4c,
	0x9e3f,
	0x7804,
	0x7901,
	0xc8f0,
	0x790f,
	0xc800,
	0x7910,
	0xc87e,
	0x790a,
	0xc880,
	0x790b,
	0xc801,
	0x790c,
	0xc80f,
	0x790d,
	0xc820,
	0x7909,
	0xc880,
	0x7902,
	0xc8c0,
	0x7903,
	0xc840,
	0x7905,
	0xc830,
	0x7926,
	0x0903,
	0x5500,
	0x5640,
	0x3b42, //0x82, //0xc0, //0xc2, 	//night mode

	/*
	0x3200,
	0x2a00,
	0x1101,
	0x1246, //QVGA RGB565
	0x1246,

	0x0903,
	0x427f,
	0x4d00, //0x09
	0x63f0,
	0x64ff,
	0x6520,
	0x6600,
	0x6700,
	0x695d,

	0x13ff,
	0x0d41, //PLL
	0x0fc5,
	0x1411,
	0x22FF, //7f
	0x2301,
	0x2434,
	0x253c,
	0x26a1,
	0x2b00,
	0x6baa,
	0x13ff,

	0x900a, //
	0x9101, //
	0x9201, //
	0x9301,

	0x945f,
	0x9553,
	0x9611,
	0x971a,
	0x983d,
	0x995a,
	0x9a1e,

	0x9b00, //set luma
	0x9c25, //set contrast
	0xa765, //set saturation
	0xa865, //set saturation
	0xa980, //set hue
	0xaa80, //set hue

	0x9e81,
	0xa606,

	0x7e0c,
	0x7f16,
	0x802a,
	0x814e,
	0x8261,
	0x836f,
	0x847b,
	0x8586,
	0x868e,
	0x8797,
	0x88a4,
	0x89af,
	0x8ac5,
	0x8bd7,
	0x8ce8,
	0x8d20,

	0x3300,
	0x2299,
	0x2303,
	0x4a00,
	0x4913,
	0x4708,
	0x4b14,
	0x4c17,
	0x4605,
	0x0e75,
	0x0cd0,
*/
};

const uint16_t OV7670::OV7670_REGCONF_QQVGA3[] FLASH_DEF = {

		0x1280,	// COM7		REGISTER RESET

		0x1180, // clkrc: clock prescaler
		0x3b0a, // com11: night mode disable
		0x3a04, // tslb: normal mode
		0x1204, // com7: output rgb
		0x8c00, // rgb444: disable, xRGB
		0x40d0, // com15: range 00-ff, RGB565
		0x1716, // hstart:
		0x1804, // hstop:
		0x3224, // hreff: lower bits of hstart, hstop
		0x1902, // vstart:
		0x1a7a, // vstop:
		0x030a, // vref: lower bits of vstart, vstop
		0x1502, // com10: vsync reverse
		0x0c04, // com3:  dcw enable
		0x3e1a, // com14: dcw, pclk setting
		0x7222, // scaling_dcwtr
		0x73f2, // scaling_pclk_div

		0x138f, // com8: default 8f // [2:0] agc, awb, aec
		//0x01b0,
		//0x02b0,
		0x145a, // com9: default 4a
		//0x0c40, // tristate, bit
		//0x1202, // test color bar
/*
		0x4FB3,
		0x50B3,
		0x5100,
		0x523D,
		0x53A7,
		0x54E4,
		0x5500,// Brightness
		0x5660,// Contrast
		0x5790,// Set contrast center
		0x589E,
*/
		0x4F99, // mtx 1
		0x5099,
		0x5100,
		0x523d,
		0x5371,
		0x54c0,
//		0x5500,// Brightness
//		0x5660,// Contrast
//		0x5790,// Set contrast center
		0x589E, // mtxs
/*
		0x9b00, //set luma
		0x9c25, //set contrast
		0xa765, //set saturation
		0xa865, //set saturation
		0xa980, //set hue
		0xaa80, //set hue
*/
		0xffff,
};

