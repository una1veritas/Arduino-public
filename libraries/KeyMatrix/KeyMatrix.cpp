/* *  KeyMatrix.cpp *   * *  Created by â∫âí ê^àÍ on 11/03/18. *  Copyright 2011 __MyCompanyName__. All rights reserved. * */#include <WProgram.h>#include "KeyMatrix.h"KeyMatrix::KeyMatrix(const char rows[], const char cols[], const char keys[]) {  row_pins = rows;  for (row_size = 0; row_pins[row_size] != -1; row_size++) {	pinMode(row_pins[row_size], INPUT);  }  col_pins = cols;  for (column_size = 0; col_pins[column_size] != -1; column_size++) {	pinMode(col_pins[column_size], OUTPUT);  }  keytops = keys;  buttonDown = false; }char KeyMatrix::getKey(boolean hold) {  long swatch;  boolean currentBState = false;  int r, c;  for (r = 0; r < row_size; r++) {    digitalWrite(row_pins[r], HIGH);    for(c= 0; c < column_size; c++) {      digitalWrite(col_pins[c], LOW);      if ( digitalRead(row_pins[r]) == LOW ) {        swatch = millis();        while ( digitalRead(row_pins[r]) == LOW ) {          if ( millis() - swatch > 5 or millis() < swatch) break;        }        if ( millis() - swatch > 5 or millis() < swatch )          currentBState = true;      }      digitalWrite(col_pins[c],HIGH);      if ( currentBState )        goto finish_keyscans;    }      }finish_keyscans:  if ( currentBState ) {	if ( hold or !buttonDown ) {	  buttonDown = true;	  return keytops[r*column_size + c];	}	if ( buttonDown ) {	  return 0;	}	  } else {    buttonDown = false;    return 0;  }      }