Sharp PC-E5x0 CMT recording header 50 bytes formatType 0x01, Machine language binaryCSAVE M "filename", &Hsaddr, &Headdr, &HcaddrAddress: value0x00: 0x01 type 0x01 --- 0x10: file name (max 8 chars) 16 bytes filled with space 0x200x11: 0x0D0x12, 0x13: length (data bytes) low, mid 2 bytes0x14, 0x15: load addr. low, mid 2 bytes0x16, 0x17: call addr. low, mid 2 bytes0x1D: length high 1 byte0x1E: load addr. high 1 byte0x1F: call addr. high 1 byte0x31: check sum (popl. count)file: XME500 disk binary filebytes = 291801 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 0D 34 0B 00 E0 00 E0 00 00 00 00 00 00 0B 0B 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 32 01 48 49 53 54 4F 52 59 2E 42 49 4E 20 20 20 2020 0D 5B 05 00 E0 00 00 00 00 00 00 00 00 0B 0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0000 3B01 43 30 30 30 30 2D 34 30 20 20 20 20 20 20 2020 0D 01 04 00 00 04 00 00 00 00 00 00 000C0C000000000000000000000000000000000027Type 0x02, BASIC imageCSAVE "filename" 0x00: 0x02 type0x01 --- 0x10: file name (limited up to first 8 chars in CSAVE command?) in 16 bytes filled with space 0x20, (without string after ".", file type extension is dropped)0x11: 0x0D0x12, 0x13: length-1 (0x32+length = ending addtess), 2 bytes low, high (from 0x32 to (incl.) 3 termination bytes)0x18: 0x01 <--- ?0x31: check sum (popl. count)0x32 -- 0x32+length-2, 0x32+length-1, 0x32+length: BASIC image ending with 0xff, popl. 16 bit low, high(the address of the last byte - 0x32 = length @ 0x13:0x12)Type 0x04, 256 byte block ASCII (BASIC CODE, BASIC DATA)SAVE "CAS:filename" (, A) 0x00: 0x04 type0x01 --- 0x0D: file name (up to first 8 chars in SAVE command?) in 13 bytes filled with space 0x200x0E --- 0x10: 3 char type extension in PC-E500 File System, such as "BAS", "DAT"0x11: 0x0D0x18: 0x040x31: check sum (popl. count)0x32 ~(length / 256) blocks of 256 byte + 2 byte popl. count, with end marker 0x1A---------------------------------------------------------PC-E5x0 RAM disk .bin file (machine language binary) format0x00 - 0x04: FF 00 06 01 10   format/file type?0x05 - 0x07: byte length low, mid, high 3 bytes0x08 - 0x0A: load address low, mid, high 3 bytes0x0B - 0x0F: FF FF FF 00 0F0x10 - : contents