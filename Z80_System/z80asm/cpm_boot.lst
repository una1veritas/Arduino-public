                        ; --------------------------------------
                        ; zasm: assemble "cpm_boot.z80"
                        ; date: 2025-10-13 00:37:40
                        ; --------------------------------------


                        ;	CP/M 2.2 boot-loader for Z80-Simulator
                        ;
                        ;	Copyright (C) 1988-2007 by Udo Munk
                        ;
0000:                   	ORG	0		;mem base of boot
                        ;
0040:                   MSIZE	EQU	64		;mem size in kbytes
                        ;
B000:                   BIAS	EQU	(MSIZE-20)*1024	;offset from 20k system
E400:                   CCP	EQU	3400H+BIAS	;base of the ccp
FA00:                   BIOS	EQU	CCP+1600H	;base of the bios
0300:                   BIOSL	EQU	0300H		;length of the bios
FA00:                   BOOT	EQU	BIOS
1900:                   SIZE	EQU	BIOS+BIOSL-CCP	;size of cp/m system
0032:                   SECTS	EQU	SIZE/128	;# of sectors to load
                        ;
                        ;	I/O ports
                        ;
0001:                   CONDAT	EQU	1		;console data port
000A:                   DRIVE   EQU	10		;fdc-port: # of drive
000B:                   TRACK   EQU	11		;fdc-port: # of track
000C:                   SECTOR  EQU	12		;fdc-port: # of sector
000D:                   FDCOP   EQU	13		;fdc-port: command
000E:                   FDCST   EQU	14		;fdc-port: status
000F:                   DMAL    EQU	15		;dma-port: dma address low
0010:                   DMAH    EQU	16		;dma-port: dma address high
                        ;
0000: C31900   [10]     	JP	COLD
                        ;
0003: 424F4F54          ERRMSG:	DEFM	'BOOT: error booting'
0007: 3A206572          
000B: 726F7220          
000F: 626F6F74          
0013: 696E67            
0016: 0D0A00            	DEFB	13,10,0
                        ;
                        ;	begin the load operation
                        ;
0019: 010200   [10]     COLD:	LD	BC,2		;b=track 0, c=sector 2
001C: 1632     [17]     	LD	D,SECTS		;d=# sectors to load
001E: 2100E4   [27]     	LD	HL,CCP		;base transfer address
0021: 3E00     [34]     	LD	A,0		;select drive A
0023: D30A     [45]     	OUT	(DRIVE),A
                        ;
                        ;	load the next sector
                        ;
0025: 78       [ 4]     LSECT:	LD	A,B		;set track
0026: D30B     [15]     	OUT	(TRACK),A
0028: 79       [19]     	LD	A,C		;set sector
0029: D30C     [30]     	OUT	(SECTOR),A
002B: 7D       [34]     	LD	A,L		;set dma address low
002C: D30F     [45]     	OUT	(DMAL),A
002E: 7C       [49]     	LD	A,H		;set dma address high
002F: D310     [60]     	OUT	(DMAH),A
0031: AF       [64]     	XOR	A		;read sector
0032: D30D     [75]     	OUT	(FDCOP),A
0034: DB0E     [86]     	IN	A,(FDCST)	;get status of fdc
0036: B7       [90]     	OR	A		;read successful ?
0037: CA4A00   [100|100]	JP	Z,CONT		;yes, continue
003A: 210300   [110]    	LD	HL,ERRMSG	;no, print error
003D: 7E       [ 7]     PRTMSG:	LD	A,(HL)
003E: B7       [11]     	OR	A
003F: CA4800   [21|21]  	JP	Z,STOP
0042: D301     [32]     	OUT	(CONDAT),A
0044: 23       [38]     	INC	HL
0045: C33D00   [48]     	JP	PRTMSG
0048: F3       [ 4]     STOP:	DI
0049: 76       [ 8]     	HALT			;and halt cpu
                        ;
004A:                   CONT:
                        				;go to next sector if load is incomplete
004A: 15       [ 4]     	DEC	D		;sects=sects-1
004B: CA00FA   [14|14]  	JP	Z,BOOT		;head for the bios
                        ;
                        ;	more sectors to load
                        ;
                        ;	we aren't using a stack, so use <sp> as scratch register
                        ;	to hold the load address increment
                        ;
004E: 318000   [24]     	LD	SP,128		;128 bytes per sector
0051: 39       [35]     	ADD	HL,SP		;<hl> = <hl> + 128
                        ;
0052: 0C       [39]     	INC	C		;sector = sector + 1
0053: 79       [43]     	LD	A,C
0054: FE1B     [50]     	CP	27		;last sector of track ?
0056: DA2500   [60|60]  	JP	C,LSECT		;no, go read another
                        ;
                        ;	end of track, increment to next track
                        ;
0059: 0E01     [67]     	LD	C,1		;sector = 1
005B: 04       [71]     	INC	B		;track = track + 1
005C: C32500   [81]     	JP	LSECT		;for another group
                        ;
                        	END			;of boot loader


; +++ segments +++

#CODE          = $0000 =     0,  size = $005F =    95

; +++ global symbols +++

BIAS    = $B000 = 45056          cpm_boot.z80:9
BIOS    = $FA00 = 64000          cpm_boot.z80:11
BIOSL   = $0300 =   768          cpm_boot.z80:12
BOOT    = $FA00 = 64000          cpm_boot.z80:13
CCP     = $E400 = 58368          cpm_boot.z80:10
COLD    = $0019 =    25          cpm_boot.z80:35
CONDAT  = $0001 =     1          cpm_boot.z80:19
CONT    = $004A =    74          cpm_boot.z80:66
DMAH    = $0010 =    16          cpm_boot.z80:26
DMAL    = $000F =    15          cpm_boot.z80:25
DRIVE   = $000A =    10          cpm_boot.z80:20
ERRMSG  = $0003 =     3          cpm_boot.z80:30
FDCOP   = $000D =    13          cpm_boot.z80:23
FDCST   = $000E =    14          cpm_boot.z80:24
LSECT   = $0025 =    37          cpm_boot.z80:43
MSIZE   = $0040 =    64          cpm_boot.z80:7
PRTMSG  = $003D =    61          cpm_boot.z80:57
SECTOR  = $000C =    12          cpm_boot.z80:22
SECTS   = $0032 =    50          cpm_boot.z80:15
SIZE    = $1900 =  6400          cpm_boot.z80:14
STOP    = $0048 =    72          cpm_boot.z80:63
TRACK   = $000B =    11          cpm_boot.z80:21
_end    = $005F =    95          cpm_boot.z80:5 (unused)
_size   = $005F =    95          cpm_boot.z80:5 (unused)


total time: 0.0015 sec.
no errors
